---
- name: mkdir dir
  file: 
    path: "{{ item }}"
    state: directory
    mode: 0755
    owner: root
  with_items:
    - /etc/kubernetes
    - /etc/kubernetes/ssl
    - /etc/kubernetes/basic
    - /etc/kubernetes/abac
    - /etc/kubernetes/config
    - /etc/kubernetes/manifests
  tags: k8s, tls, auth

- name: generate openssl-srv.conf
  template:
    src: openssl-srv-conf.j2
    dest: /etc/kubernetes/ssl/openssl-srv.conf
    mode: 0644
    owner: root
  tags: tls

# apiserver
# Generate an OpenSSL private key with a size (2048 bits)
- name: generate private key, apiserver
  shell: openssl genrsa -out /etc/kubernetes/ssl/apiserver-key.pem 2048
  args:
    chdir: /etc/kubernetes/ssl
  tags: tls

# Generate an OpenSSL Certificate Signing Request
- name: generate CSR , apiserver
  shell: openssl req -new -key apiserver-key.pem -out apiserver.csr -subj "/CN=kube-apiserver" -config openssl-srv.conf
  args:      
    chdir: /etc/kubernetes/ssl
  tags: tls

- name: create certificate, apiserver
  shell: openssl x509 -req -in apiserver.csr -CA ca.pem -CAkey ca-key.pem -CAcreateserial -out apiserver.pem -days 3650 -extensions v3_req -extfile openssl-srv.conf
  args: 
    chdir: /etc/kubernetes/ssl
  tags: tls

# kubelet
# Generate an OpenSSL private key with a size (2048 bits)
- name: generate private key, kubelet
  shell: openssl genrsa -out /etc/kubernetes/ssl/kubelet-key.pem 2048
  args:
    chdir: /etc/kubernetes/ssl
  tags: tls

# Generate an OpenSSL Certificate Signing Request
- name: generate CSR , kubelet
  shell: openssl req -new -key kubelet-key.pem -out kubelet.csr -subj "/CN=kubelet"
  args:                                                                        
    chdir: /etc/kubernetes/ssl
  tags: tls

- name: create certificate, kubelet
  shell: openssl x509 -req -in kubelet.csr -CA ca.pem -CAkey ca-key.pem -CAcreateserial -out kubelet.pem -days 3650 
  args:                                      
    chdir: /etc/kubernetes/ssl
  tags: tls


- name: copy Basic Token csv and ABAC policy file
  copy:
    src: "{{ item.src }}" 
    dest: "{{ item.dest }}"
    mode: 0600
    owner: root
  with_items:
    - { src: basic/ , dest: /etc/kubernetes/basic }
    - { src: abac/ , dest: /etc/kubernetes/abac }
  tags: auth

# kubeconfig hypekube
- name: copy local-kubeconfig.yml
  copy:
    src: config/local-kubeconfig.yaml
    dest: /etc/kubernetes/config/local-kubeconfig.yaml
    mode: 0644
    owner: root
    group: root
  tags: k8s

# kubeconfig addons
- name: copy addons-manager.yaml && master-kubelet.yaml
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    mode: 0644
    owner: root
    group: root
  with_items:
    - { src: master-kubelet-kubeconfig.j2, dest: /etc/kubernetes/config/master-kubelet.yaml}
    - { src: addons-manager-kubeconfig.j2, dest: /etc/kubernetes/config/addons-manager.yaml}
    - { src: kubernetes-master-manifest.j2, dest: /etc/kubernetes/manifests/kubernetes_master.manifest }
  tags: k8s

- name: template kube-addons service , kubelet master and kubernetes-master.manifest
  template: 
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    mode: 0644
    owner: root
    group: root
  with_items:
    - { src: kube-addons-service.j2, dest: /etc/systemd/system/kube-addons.service }
    - { src: kubelet-master-service.j2, dest: /etc/systemd/system/kubelet.service }
  tags: systemd, k8s
  notify:
    - enable service
 
